{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-06T19:13:20.451Z",
    "end": "2025-07-06T19:13:20.693Z",
    "duration": 242,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4133a9f0-320f-41ce-a4de-366ac026edde",
      "title": "",
      "fullFile": "cypress/api/api.signup.spec.ts",
      "file": "cypress/api/api.signup.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "510f4480-99d4-43e1-9866-0180c95353c5",
          "title": "Dynamic User Signup Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "signs up a unique user",
              "fullTitle": "Dynamic User Signup Tests signs up a unique user",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user, \"user test data is defined\").to.not.be.undefined;\ncy.signupViaAPI(user).then((resp) => {\n    expect(resp.status).to.eq(201);\n    expect(resp.body.account).to.have.property('email').and.contain(user.email);\n    expect(resp.body.account).to.have.property('firstName').and.contain(user.firstName);\n    expect(resp.body.account).to.have.property('lastName').and.contain(user.lastName);\n    expect(resp.body.account).to.have.property('id');\n});",
              "err": {},
              "uuid": "3a6b3e15-bebf-400c-b0ac-9fb919c84e12",
              "parentUUID": "510f4480-99d4-43e1-9866-0180c95353c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fails when signing up same user again",
              "fullTitle": "Dynamic User Signup Tests fails when signing up same user again",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user, \"user test data is defined\").to.not.be.undefined;\ncy.signupViaAPI(user).then((resp) => {\n    expect(resp.status).to.eq(409);\n    expect(resp.body.error).to.include('duplicate entity');\n});",
              "err": {},
              "uuid": "6e5aaec9-51cf-449e-b72d-f71b5b3eaee3",
              "parentUUID": "510f4480-99d4-43e1-9866-0180c95353c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a6b3e15-bebf-400c-b0ac-9fb919c84e12",
            "6e5aaec9-51cf-449e-b72d-f71b5b3eaee3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 225,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true,
        "quiet": true,
        "timestamp": "mmddyyyy_HHMMss",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}