{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-07T03:13:29.456Z",
    "end": "2025-07-07T03:13:29.742Z",
    "duration": 286,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d7e0f90b-ada1-46e7-bd78-9f3aa97a702b",
      "title": "",
      "fullFile": "cypress/api/api.signup.spec.ts",
      "file": "cypress/api/api.signup.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "391c9825-a6d0-4cac-8e0d-82904d819a2b",
          "title": "User Signup API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC01: Signs up a unique user",
              "fullTitle": "User Signup API Tests TC01: Signs up a unique user",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user, 'user test data is defined').to.not.be.undefined;\ncy.signupViaAPI(user).then((resp) => {\n    expect(resp.status).to.eq(201);\n    expect(resp.body.account).to.have.property('email').and.contain(user.email);\n    expect(resp.body.account).to.have.property('firstName').and.contain(user.firstName);\n    expect(resp.body.account).to.have.property('lastName').and.contain(user.lastName);\n    expect(resp.body.account).to.have.property('id');\n});",
              "err": {},
              "uuid": "2dae6054-8d6c-4ded-9fa1-2ece14343e90",
              "parentUUID": "391c9825-a6d0-4cac-8e0d-82904d819a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC02: Sign up fails when signing up same user again",
              "fullTitle": "User Signup API Tests TC02: Sign up fails when signing up same user again",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user, 'user test data is defined').to.not.be.undefined;\ncy.signupViaAPI(user).then((resp) => {\n    expect(resp.status).to.eq(409);\n    expect(resp.body.error).to.include('duplicate entity');\n});",
              "err": {},
              "uuid": "aa612741-11f3-4c95-8f60-900629182ecf",
              "parentUUID": "391c9825-a6d0-4cac-8e0d-82904d819a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dae6054-8d6c-4ded-9fa1-2ece14343e90",
            "aa612741-11f3-4c95-8f60-900629182ecf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 261,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true,
        "quiet": true,
        "timestamp": "mmddyyyy_HHMMss",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}